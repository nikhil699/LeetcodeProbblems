# n = 16
# Step 1: 16 → 8
# Step 2: 8 → 4
# Step 3: 4 → 2
# Step 4: 2 → 1

# n/2 
# k
#  =1
# Solving for k:

# 𝑘
# =
# log
# 2
# (
# 𝑛
# )
# k=log 
# 2
# (n)


class Solution(object):
    def search(self, nums, target):
        """
        :type nums: List[int]
        :type target: int
        :rtype: int
        """
        # [4,5,6,7,0,1,2] = output = 6


        left = 0
        right = len(nums) - 1

        while left <= right:
            mid = (left + right) // 2

            if nums[mid] == target:
                return mid
            
            if nums[left] <= nums[mid]:
                if nums[left] <= target <= nums[mid]:
                    right = mid - 1
                else:
                    left = mid + 1
            else:
                if nums[mid] <= target <= nums[right]:
                    left = mid + 1
                else:
                    right = mid - 1
            
        return -1




nums = [4,5,6,7,0,1,2]
target = 0

sol = Solution()

print(sol.search(nums,target))